{"ast":null,"code":"var _jsxFileName = \"/home/sahithi/Documents/myndai/client/src/pages/SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './SignUp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [{\n  label: 'Full Name',\n  type: 'text',\n  key: 'fullName'\n}, {\n  label: 'Mobile Number',\n  type: 'text',\n  key: 'mobileNumber'\n}, {\n  label: 'Email',\n  type: 'email',\n  key: 'email'\n}, {\n  label: 'Username',\n  type: 'text',\n  key: 'username'\n}, {\n  label: 'Password',\n  type: 'password',\n  key: 'password'\n}, {\n  label: 'Confirm Password',\n  type: 'password',\n  key: 'confirmPassword'\n}];\nfunction SignUp() {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    fullName: '',\n    mobileNumber: '',\n    email: '',\n    username: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const handleChange = e => {\n    const {\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [questions[currentQuestion].key]: value\n    });\n  };\n  const handleNext = () => {\n    if (currentQuestion === questions.length - 1) {\n      if (formData.password !== formData.confirmPassword) {\n        setError('Passwords do not match.');\n        return;\n      }\n      registerUser();\n    } else {\n      setError('');\n      setCurrentQuestion(prev => prev + 1);\n    }\n  };\n  const registerUser = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        const result = await response.json();\n        setSuccess('Registration successful!');\n        setError('');\n        navigate('/personalize');\n      } else {\n        const errorData = await response.json();\n        setError(errorData.message || 'Error registering user.');\n        setSuccess('');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setError('Failed to register. Please try again.');\n      setSuccess('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Your Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), currentQuestion < questions.length ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"signup-form\",\n      onSubmit: e => e.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [questions[currentQuestion].label, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: questions[currentQuestion].type,\n          value: formData[questions[currentQuestion].key],\n          onChange: handleChange,\n          required: true,\n          placeholder: `Enter your ${questions[currentQuestion].label}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleNext,\n        children: currentQuestion === questions.length - 1 ? 'Register' : 'Next'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(SignUp, \"29cz7yLdQWuAIVVRyi7OqMBLA9Q=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","questions","label","type","key","SignUp","_s","navigate","formData","setFormData","fullName","mobileNumber","email","username","password","confirmPassword","currentQuestion","setCurrentQuestion","error","setError","success","setSuccess","handleChange","e","value","target","handleNext","length","registerUser","prev","response","fetch","method","headers","body","JSON","stringify","ok","result","json","errorData","message","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","preventDefault","onChange","required","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/sahithi/Documents/myndai/client/src/pages/SignUp.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './SignUp.css';\n\nconst questions = [\n  { label: 'Full Name', type: 'text', key: 'fullName' },\n  { label: 'Mobile Number', type: 'text', key: 'mobileNumber' },\n  { label: 'Email', type: 'email', key: 'email' },\n  { label: 'Username', type: 'text', key: 'username' },\n  { label: 'Password', type: 'password', key: 'password' },\n  { label: 'Confirm Password', type: 'password', key: 'confirmPassword' },\n];\n\nfunction SignUp() {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    fullName: '',\n    mobileNumber: '',\n    email: '',\n    username: '',\n    password: '',\n    confirmPassword: '',\n  });\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n    setFormData({ ...formData, [questions[currentQuestion].key]: value });\n  };\n\n  const handleNext = () => {\n    if (currentQuestion === questions.length - 1) {\n      if (formData.password !== formData.confirmPassword) {\n        setError('Passwords do not match.');\n        return;\n      }\n      registerUser();\n    } else {\n      setError('');\n      setCurrentQuestion((prev) => prev + 1);\n    }\n  };\n\n  const registerUser = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        setSuccess('Registration successful!');\n        setError('');\n        navigate('/personalize');\n      } else {\n        const errorData = await response.json();\n        setError(errorData.message || 'Error registering user.');\n        setSuccess('');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setError('Failed to register. Please try again.');\n      setSuccess('');\n    }\n  };\n\n  return (\n    <div className=\"signup-container\">\n      <h1>Create Your Account</h1>\n      {currentQuestion < questions.length ? (\n        <form className=\"signup-form\" onSubmit={(e) => e.preventDefault()}>\n          <label>\n            {questions[currentQuestion].label}\n            <input\n              type={questions[currentQuestion].type}\n              value={formData[questions[currentQuestion].key]}\n              onChange={handleChange}\n              required\n              placeholder={`Enter your ${questions[currentQuestion].label}`}\n            />\n          </label>\n          {error && <p className=\"error-message\">{error}</p>}\n          <button type=\"button\" onClick={handleNext}>\n            {currentQuestion === questions.length - 1 ? 'Register' : 'Next'}\n          </button>\n        </form>\n      ) : (\n        <p className=\"success-message\">{success}</p>\n      )}\n    </div>\n  );\n}\n\nexport default SignUp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}