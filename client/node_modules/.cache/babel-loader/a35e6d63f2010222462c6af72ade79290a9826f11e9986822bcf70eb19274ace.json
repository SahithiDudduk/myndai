{"ast":null,"code":"var _jsxFileName = \"/home/sahithi/Documents/myndai/client/src/pages/SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PasswordStrengthBar from 'react-password-strength-bar';\nimport { ReactTyped as Typed } from 'react-typed';\nimport './SignUp.css';\nimport { useNavigate } from 'react-router-dom';\nimport PersonalizeExperience from './PersonalizeExperience';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignUp() {\n  _s();\n  const navigate = useNavigate();\n  const [step, setStep] = useState(1);\n  const [email, setEmail] = useState('');\n  const [mobileNumber, setMobileNumber] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [showInput, setShowInput] = useState(false);\n  const [isRegistered, setIsRegistered] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const handleContinue = () => {\n    setError('');\n    if (step === 1 && !email) return setError('Please enter a valid email.');\n    if (step === 2 && !mobileNumber) return setError('Please enter a valid mobile number.');\n    if (step === 3 && !username) return setError('Please enter a username.');\n    if (step === 4 && !password) return setError('Please enter a valid password.');\n    if (step === 5 && password !== confirmPassword) return setError('Passwords do not match.');\n    setStep(step + 1);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const userData = {\n        mobileNumber,\n        email,\n        username,\n        password\n      };\n      const API_URL = 'http://3.111.58.101:5000/api'; // Update this if using a production server\n\n      // Make sure to include 'Content-Type' for JSON data and handle errors\n      // const response = await fetch(`${API_URL}/register`, {\n      //   method: 'POST',\n      //   headers: {\n      //     'Content-Type': 'application/json',\n      //   },\n      //   body: JSON.stringify(userData),\n      // });\n\n      // setLoading(false);\n\n      // if (!response.ok) {\n      //   const errorData = await response.json();\n      //   setError(errorData.message || 'Registration failed.');\n      //   return;\n      // }\n      const response = await fetch(`${API_URL}/getUsers`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      fetch('http://3.111.58.101:5000/api/getUsers').then(response => response.json()).then(data => console.log(data)).catch(error => console.error('Error fetching users:', error));\n      const data = await response.json();\n      setSuccess(data.message || 'Registration successful!');\n      setIsRegistered(true);\n      navigate('/personalize');\n    } catch (error) {\n      setLoading(false);\n      setError('An error occurred during registration.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: [!showInput ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(Typed, {\n        strings: [\"Welcome to MyndAI!\", \"Letâ€™s begin the adventure\"],\n        typeSpeed: 50,\n        backSpeed: 30,\n        loop: false,\n        onComplete: () => setShowInput(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-form-container\",\n      children: isRegistered ? /*#__PURE__*/_jsxDEV(PersonalizeExperience, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"signup-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Enter your email*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"email\",\n              type: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              required: true,\n              disabled: step > 1 || loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this), step === 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"continue-button\",\n              onClick: handleContinue,\n              disabled: loading,\n              children: \"Continue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this), step >= 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"mobileNumber\",\n            children: \"Enter your mobile number*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"mobileNumber\",\n              type: \"tel\",\n              value: mobileNumber,\n              onChange: e => setMobileNumber(e.target.value),\n              required: true,\n              disabled: step > 2 || loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 21\n            }, this), step === 2 && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"continue-button\",\n              onClick: handleContinue,\n              disabled: loading,\n              children: \"Continue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this), step >= 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Choose a username*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"username\",\n              type: \"text\",\n              value: username,\n              onChange: e => setUsername(e.target.value),\n              required: true,\n              disabled: step > 3 || loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 21\n            }, this), step === 3 && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"continue-button\",\n              onClick: handleContinue,\n              disabled: loading,\n              children: \"Continue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this), step >= 4 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Create a password*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"password\",\n              type: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              required: true,\n              disabled: loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 21\n            }, this), step === 4 && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"continue-button\",\n              onClick: handleContinue,\n              disabled: loading,\n              children: \"Continue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }, this), step >= 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"Confirm Password*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"confirmPassword\",\n              type: \"password\",\n              value: confirmPassword,\n              onChange: e => setConfirmPassword(e.target.value),\n              required: true,\n              disabled: loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"continue-button\",\n              disabled: loading,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 17\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"success-message\",\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), step >= 4 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"password-strength-container\",\n      children: /*#__PURE__*/_jsxDEV(PasswordStrengthBar, {\n        password: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(SignUp, \"9Hr2HEknbInzYvnlBgeoBgbdr6A=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nexport default SignUp;\n\n// //client/SignUp.js\n// import React, { useState } from 'react';\n// import PasswordStrengthBar from 'react-password-strength-bar';\n// import { ReactTyped as Typed } from 'react-typed';\n// import './SignUp.css';\n// import { useNavigate } from 'react-router-dom'; \n// import PersonalizeExperience from './PersonalizeExperience';\n\n// function SignUp() {\n//   const navigate = useNavigate();\n//   const [step, setStep] = useState(1);\n//   const [email, setEmail] = useState('');\n//   const [mobileNumber, setMobileNumber] = useState('');\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [confirmPassword, setConfirmPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const [success, setSuccess] = useState('');\n//   const [showInput, setShowInput] = useState(false);\n//   const [isRegistered, setIsRegistered] = useState(false);\n//   const [loading, setLoading] = useState(false);\n\n//   const handleContinue = () => {\n//     setError('');\n//     if (step === 1 && !email) return setError('Please enter a valid email.');\n//     if (step === 2 && !mobileNumber) return setError('Please enter a valid mobile number.');\n//     if (step === 3 && !username) return setError('Please enter a username.');\n//     if (step === 4 && !password) return setError('Please enter a valid password.');\n//     if (step === 5 && password !== confirmPassword) return setError('Passwords do not match.');\n//     setStep(step + 1);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     try {\n//       const userData = { mobileNumber, email, username, password };\n//       // const API_URL = 'http://localhost:5000/api'; \n\n//       const response = await fetch(`${API_URL}/register`, {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(userData),\n//       });\n\n//       setLoading(false);\n\n//       if (!response.ok) {\n//         const errorData = await response.json();\n//         setError(errorData.message || 'Registration failed.');\n//         return;\n//       }\n\n//       const data = await response.json();\n//       setSuccess(data.message);\n//       setIsRegistered(true);\n//       navigate('/personalize');\n//     } catch (error) {\n//       setError('An error occurred during registration.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"signup-container\">\n//       {!showInput ? (\n//         <h1>\n//           <Typed\n//             strings={[\"Welcome to MyndAI!\", \"Letâ€™s begin the adventure\"]}\n//             typeSpeed={50}\n//             backSpeed={30}\n//             loop={false}\n//             onComplete={() => setShowInput(true)}\n//           />\n//         </h1>\n//       ) : (\n//         <div className=\"signup-form-container\">\n//           {isRegistered ? (\n//             <PersonalizeExperience />\n//           ) : (\n//             <form className=\"signup-form\" onSubmit={handleSubmit}>\n//               {/* Step 1: Enter Email */}\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"email\">Enter your email*</label>\n//                 <div className=\"input-group\">\n//                   <input\n//                     id=\"email\"\n//                     type=\"email\"\n//                     value={email}\n//                     onChange={(e) => setEmail(e.target.value)}\n//                     required\n//                     disabled={step > 1 || loading}\n//                   />\n//                   {step === 1 && (\n//                     <button type=\"button\" className=\"continue-button\" onClick={handleContinue} disabled={loading}>\n//                       Continue\n//                     </button>\n//                   )}\n//                 </div>\n//               </div>\n\n//               {/* Step 2: Enter Mobile Number */}\n//               {step >= 2 && (\n//                 <div className=\"form-group\">\n//                   <label htmlFor=\"mobileNumber\">Enter your mobile number*</label>\n//                   <div className=\"input-group\">\n//                     <input\n//                       id=\"mobileNumber\"\n//                       type=\"tel\"\n//                       value={mobileNumber}\n//                       onChange={(e) => setMobileNumber(e.target.value)}\n//                       required\n//                       disabled={step > 2 || loading}\n//                     />\n//                     {step === 2 && (\n//                       <button type=\"button\" className=\"continue-button\" onClick={handleContinue} disabled={loading}>\n//                         Continue\n//                       </button>\n//                     )}\n//                   </div>\n//                 </div>\n//               )}\n\n//               {/* Step 3: Enter Username */}\n//               {step >= 3 && (\n//                 <div className=\"form-group\">\n//                   <label htmlFor=\"username\">Choose a username*</label>\n//                   <div className=\"input-group\">\n//                     <input\n//                       id=\"username\"\n//                       type=\"text\"\n//                       value={username}\n//                       onChange={(e) => setUsername(e.target.value)}\n//                       required\n//                       disabled={step > 3 || loading}\n//                     />\n//                     {step === 3 && (\n//                       <button type=\"button\" className=\"continue-button\" onClick={handleContinue} disabled={loading}>\n//                         Continue\n//                       </button>\n//                     )}\n//                   </div>\n//                 </div>\n//               )}\n\n//               {/* Step 4: Create Password */}\n//               {step >= 4 && (\n//                 <div className=\"form-group\">\n//                   <label htmlFor=\"password\">Create a password*</label>\n//                   <div className=\"input-group\">\n//                     <input\n//                       id=\"password\"\n//                       type=\"password\"\n//                       value={password}\n//                       onChange={(e) => setPassword(e.target.value)}\n//                       required\n//                       disabled={loading}\n//                     />\n//                     {step === 4 && (\n//                       <button type=\"button\" className=\"continue-button\" onClick={handleContinue} disabled={loading}>\n//                         Continue\n//                       </button>\n//                     )}\n//                   </div>\n//                 </div>\n//               )}\n\n//               {/* Step 5: Confirm Password */}\n//               {step >= 5 && (\n//                 <div className=\"form-group\">\n//                   <label htmlFor=\"confirmPassword\">Confirm Password*</label>\n//                   <div className=\"input-group\">\n//                     <input\n//                       id=\"confirmPassword\"\n//                       type=\"password\"\n//                       value={confirmPassword}\n//                       onChange={(e) => setConfirmPassword(e.target.value)}\n//                       required\n//                       disabled={loading}\n//                     />\n//                     <button type=\"submit\" className=\"continue-button\" disabled={loading}>\n//                       Submit\n//                     </button>\n//                   </div>\n//                 </div>\n//               )}\n\n//               {/* Error Message */}\n//               {error && <p className=\"error-message\">{error}</p>}\n//               {success && <p className=\"success-message\">{success}</p>}\n//             </form>\n//           )}\n//         </div>\n//       )}\n\n//       {step >= 4 && (\n//         <div className=\"password-strength-container\">\n//           <PasswordStrengthBar password={password} />\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","PasswordStrengthBar","ReactTyped","Typed","useNavigate","PersonalizeExperience","jsxDEV","_jsxDEV","SignUp","_s","navigate","step","setStep","email","setEmail","mobileNumber","setMobileNumber","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","showInput","setShowInput","isRegistered","setIsRegistered","loading","setLoading","handleContinue","handleSubmit","e","preventDefault","userData","API_URL","response","fetch","method","headers","body","JSON","stringify","then","json","data","console","log","catch","message","className","children","strings","typeSpeed","backSpeed","loop","onComplete","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","value","onChange","target","required","disabled","onClick","_c","$RefreshReg$"],"sources":["/home/sahithi/Documents/myndai/client/src/pages/SignUp.js"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport PasswordStrengthBar from 'react-password-strength-bar';\nimport { ReactTyped as Typed } from 'react-typed';\nimport './SignUp.css';\nimport { useNavigate } from 'react-router-dom';\nimport PersonalizeExperience from './PersonalizeExperience';\n\nfunction SignUp() {\n  const navigate = useNavigate();\n  const [step, setStep] = useState(1);\n  const [email, setEmail] = useState('');\n  const [mobileNumber, setMobileNumber] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [showInput, setShowInput] = useState(false);\n  const [isRegistered, setIsRegistered] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handleContinue = () => {\n    setError('');\n    if (step === 1 && !email) return setError('Please enter a valid email.');\n    if (step === 2 && !mobileNumber) return setError('Please enter a valid mobile number.');\n    if (step === 3 && !username) return setError('Please enter a username.');\n    if (step === 4 && !password) return setError('Please enter a valid password.');\n    if (step === 5 && password !== confirmPassword) return setError('Passwords do not match.');\n    setStep(step + 1);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const userData = { mobileNumber, email, username, password };\n      const API_URL = 'http://3.111.58.101:5000/api';  // Update this if using a production server\n\n      // Make sure to include 'Content-Type' for JSON data and handle errors\n      // const response = await fetch(`${API_URL}/register`, {\n      //   method: 'POST',\n      //   headers: {\n      //     'Content-Type': 'application/json',\n      //   },\n      //   body: JSON.stringify(userData),\n      // });\n\n      // setLoading(false);\n\n      // if (!response.ok) {\n      //   const errorData = await response.json();\n      //   setError(errorData.message || 'Registration failed.');\n      //   return;\n      // }\n      const response = await fetch(`${API_URL}/getUsers`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(userData),\n      });\n\n\n      fetch('http://3.111.58.101:5000/api/getUsers')\n      .then(response => response.json())\n      .then(data => console.log(data))\n      .catch(error => console.error('Error fetching users:', error));\n    \n      const data = await response.json();\n      setSuccess(data.message || 'Registration successful!');\n      setIsRegistered(true);\n      navigate('/personalize');\n    } catch (error) {\n      setLoading(false);\n      setError('An error occurred during registration.');\n    }\n  };\n\n  return (\n    <div className=\"signup-container\">\n      {!showInput ? (\n        <h1>\n          <Typed\n            strings={[\"Welcome to MyndAI!\", \"Letâ€™s begin the adventure\"]}\n            typeSpeed={50}\n            backSpeed={30}\n            loop={false}\n            onComplete={() => setShowInput(true)}\n          />\n        </h1>\n      ) : (\n        <div className=\"signup-form-container\">\n          {isRegistered ? (\n            <PersonalizeExperience />\n          ) : (\n            <form className=\"signup-form\" onSubmit={handleSubmit}>\n              {/* Step 1: Enter Email */}\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Enter your email*</label>\n                <div className=\"input-group\">\n                  <input\n                    id=\"email\"\n                    type=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    required\n                    disabled={step > 1 || loading}\n                  />\n                  {step === 1 && (\n                    <button type=\"button\" className=\"continue-button\" onClick={handleContinue} disabled={loading}>\n                      Continue\n                    </button>\n                  )}\n                </div>\n              </div>\n\n              {/* Step 2: Enter Mobile Number */}\n              {step >= 2 && (\n                <div className=\"form-group\">\n                  <label htmlFor=\"mobileNumber\">Enter your mobile number*</label>\n                  <div className=\"input-group\">\n                    <input\n                      id=\"mobileNumber\"\n                      type=\"tel\"\n                      value={mobileNumber}\n                      onChange={(e) => setMobileNumber(e.target.value)}\n                      required\n                      disabled={step > 2 || loading}\n                    />\n                    {step === 2 && (\n                      <button type=\"button\" className=\"continue-button\" onClick={handleContinue} disabled={loading}>\n                        Continue\n                      </button>\n                    )}\n                  </div>\n                </div>\n              )}\n\n              {/* Step 3: Enter Username */}\n              {step >= 3 && (\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Choose a username*</label>\n                  <div className=\"input-group\">\n                    <input\n                      id=\"username\"\n                      type=\"text\"\n                      value={username}\n                      onChange={(e) => setUsername(e.target.value)}\n                      required\n                      disabled={step > 3 || loading}\n                    />\n                    {step === 3 && (\n                      <button type=\"button\" className=\"continue-button\" onClick={handleContinue} disabled={loading}>\n                        Continue\n                      </button>\n                    )}\n                  </div>\n                </div>\n              )}\n\n              {/* Step 4: Create Password */}\n              {step >= 4 && (\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Create a password*</label>\n                  <div className=\"input-group\">\n                    <input\n                      id=\"password\"\n                      type=\"password\"\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                      required\n                      disabled={loading}\n                    />\n                    {step === 4 && (\n                      <button type=\"button\" className=\"continue-button\" onClick={handleContinue} disabled={loading}>\n                        Continue\n                      </button>\n                    )}\n                  </div>\n                </div>\n              )}\n\n              {/* Step 5: Confirm Password */}\n              {step >= 5 && (\n                <div className=\"form-group\">\n                  <label htmlFor=\"confirmPassword\">Confirm Password*</label>\n                  <div className=\"input-group\">\n                    <input\n                      id=\"confirmPassword\"\n                      type=\"password\"\n                      value={confirmPassword}\n                      onChange={(e) => setConfirmPassword(e.target.value)}\n                      required\n                      disabled={loading}\n                    />\n                    <button type=\"submit\" className=\"continue-button\" disabled={loading}>\n                      Submit\n                    </button>\n                  </div>\n                </div>\n              )}\n\n              {/* Error Message */}\n              {error && <p className=\"error-message\">{error}</p>}\n              {success && <p className=\"success-message\">{success}</p>}\n            </form>\n          )}\n        </div>\n      )}\n\n      {step >= 4 && (\n        <div className=\"password-strength-container\">\n          <PasswordStrengthBar password={password} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default SignUp;\n\n// //client/SignUp.js\n// import React, { useState } from 'react';\n// import PasswordStrengthBar from 'react-password-strength-bar';\n// import { ReactTyped as Typed } from 'react-typed';\n// import './SignUp.css';\n// import { useNavigate } from 'react-router-dom'; \n// import PersonalizeExperience from './PersonalizeExperience';\n\n// function SignUp() {\n//   const navigate = useNavigate();\n//   const [step, setStep] = useState(1);\n//   const [email, setEmail] = useState('');\n//   const [mobileNumber, setMobileNumber] = useState('');\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [confirmPassword, setConfirmPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const [success, setSuccess] = useState('');\n//   const [showInput, setShowInput] = useState(false);\n//   const [isRegistered, setIsRegistered] = useState(false);\n//   const [loading, setLoading] = useState(false);\n\n//   const handleContinue = () => {\n//     setError('');\n//     if (step === 1 && !email) return setError('Please enter a valid email.');\n//     if (step === 2 && !mobileNumber) return setError('Please enter a valid mobile number.');\n//     if (step === 3 && !username) return setError('Please enter a username.');\n//     if (step === 4 && !password) return setError('Please enter a valid password.');\n//     if (step === 5 && password !== confirmPassword) return setError('Passwords do not match.');\n//     setStep(step + 1);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     try {\n//       const userData = { mobileNumber, email, username, password };\n//       // const API_URL = 'http://localhost:5000/api'; \n\n//       const response = await fetch(`${API_URL}/register`, {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(userData),\n//       });\n\n//       setLoading(false);\n\n//       if (!response.ok) {\n//         const errorData = await response.json();\n//         setError(errorData.message || 'Registration failed.');\n//         return;\n//       }\n\n//       const data = await response.json();\n//       setSuccess(data.message);\n//       setIsRegistered(true);\n//       navigate('/personalize');\n//     } catch (error) {\n//       setError('An error occurred during registration.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"signup-container\">\n//       {!showInput ? (\n//         <h1>\n//           <Typed\n//             strings={[\"Welcome to MyndAI!\", \"Letâ€™s begin the adventure\"]}\n//             typeSpeed={50}\n//             backSpeed={30}\n//             loop={false}\n//             onComplete={() => setShowInput(true)}\n//           />\n//         </h1>\n//       ) : (\n//         <div className=\"signup-form-container\">\n//           {isRegistered ? (\n//             <PersonalizeExperience />\n//           ) : (\n//             <form className=\"signup-form\" onSubmit={handleSubmit}>\n//               {/* Step 1: Enter Email */}\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"email\">Enter your email*</label>\n//                 <div className=\"input-group\">\n//                   <input\n//                     id=\"email\"\n//                     type=\"email\"\n//                     value={email}\n//                     onChange={(e) => setEmail(e.target.value)}\n//                     required\n//                     disabled={step > 1 || loading}\n//                   />\n//                   {step === 1 && (\n//                     <button type=\"button\" className=\"continue-button\" onClick={handleContinue} disabled={loading}>\n//                       Continue\n//                     </button>\n//                   )}\n//                 </div>\n//               </div>\n\n//               {/* Step 2: Enter Mobile Number */}\n//               {step >= 2 && (\n//                 <div className=\"form-group\">\n//                   <label htmlFor=\"mobileNumber\">Enter your mobile number*</label>\n//                   <div className=\"input-group\">\n//                     <input\n//                       id=\"mobileNumber\"\n//                       type=\"tel\"\n//                       value={mobileNumber}\n//                       onChange={(e) => setMobileNumber(e.target.value)}\n//                       required\n//                       disabled={step > 2 || loading}\n//                     />\n//                     {step === 2 && (\n//                       <button type=\"button\" className=\"continue-button\" onClick={handleContinue} disabled={loading}>\n//                         Continue\n//                       </button>\n//                     )}\n//                   </div>\n//                 </div>\n//               )}\n\n//               {/* Step 3: Enter Username */}\n//               {step >= 3 && (\n//                 <div className=\"form-group\">\n//                   <label htmlFor=\"username\">Choose a username*</label>\n//                   <div className=\"input-group\">\n//                     <input\n//                       id=\"username\"\n//                       type=\"text\"\n//                       value={username}\n//                       onChange={(e) => setUsername(e.target.value)}\n//                       required\n//                       disabled={step > 3 || loading}\n//                     />\n//                     {step === 3 && (\n//                       <button type=\"button\" className=\"continue-button\" onClick={handleContinue} disabled={loading}>\n//                         Continue\n//                       </button>\n//                     )}\n//                   </div>\n//                 </div>\n//               )}\n\n//               {/* Step 4: Create Password */}\n//               {step >= 4 && (\n//                 <div className=\"form-group\">\n//                   <label htmlFor=\"password\">Create a password*</label>\n//                   <div className=\"input-group\">\n//                     <input\n//                       id=\"password\"\n//                       type=\"password\"\n//                       value={password}\n//                       onChange={(e) => setPassword(e.target.value)}\n//                       required\n//                       disabled={loading}\n//                     />\n//                     {step === 4 && (\n//                       <button type=\"button\" className=\"continue-button\" onClick={handleContinue} disabled={loading}>\n//                         Continue\n//                       </button>\n//                     )}\n//                   </div>\n//                 </div>\n//               )}\n\n//               {/* Step 5: Confirm Password */}\n//               {step >= 5 && (\n//                 <div className=\"form-group\">\n//                   <label htmlFor=\"confirmPassword\">Confirm Password*</label>\n//                   <div className=\"input-group\">\n//                     <input\n//                       id=\"confirmPassword\"\n//                       type=\"password\"\n//                       value={confirmPassword}\n//                       onChange={(e) => setConfirmPassword(e.target.value)}\n//                       required\n//                       disabled={loading}\n//                     />\n//                     <button type=\"submit\" className=\"continue-button\" disabled={loading}>\n//                       Submit\n//                     </button>\n//                   </div>\n//                 </div>\n//               )}\n\n//               {/* Error Message */}\n//               {error && <p className=\"error-message\">{error}</p>}\n//               {success && <p className=\"success-message\">{success}</p>}\n//             </form>\n//           )}\n//         </div>\n//       )}\n\n//       {step >= 4 && (\n//         <div className=\"password-strength-container\">\n//           <PasswordStrengthBar password={password} />\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default SignUp;\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,mBAAmB,MAAM,6BAA6B;AAC7D,SAASC,UAAU,IAAIC,KAAK,QAAQ,aAAa;AACjD,OAAO,cAAc;AACrB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,qBAAqB,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqB,eAAe,EAAEC,kBAAkB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACyB,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC2B,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC6B,YAAY,EAAEC,eAAe,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC+B,OAAO,EAAEC,UAAU,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMiC,cAAc,GAAGA,CAAA,KAAM;IAC3BT,QAAQ,CAAC,EAAE,CAAC;IACZ,IAAIb,IAAI,KAAK,CAAC,IAAI,CAACE,KAAK,EAAE,OAAOW,QAAQ,CAAC,6BAA6B,CAAC;IACxE,IAAIb,IAAI,KAAK,CAAC,IAAI,CAACI,YAAY,EAAE,OAAOS,QAAQ,CAAC,qCAAqC,CAAC;IACvF,IAAIb,IAAI,KAAK,CAAC,IAAI,CAACM,QAAQ,EAAE,OAAOO,QAAQ,CAAC,0BAA0B,CAAC;IACxE,IAAIb,IAAI,KAAK,CAAC,IAAI,CAACQ,QAAQ,EAAE,OAAOK,QAAQ,CAAC,gCAAgC,CAAC;IAC9E,IAAIb,IAAI,KAAK,CAAC,IAAIQ,QAAQ,KAAKE,eAAe,EAAE,OAAOG,QAAQ,CAAC,yBAAyB,CAAC;IAC1FZ,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;EACnB,CAAC;EAED,MAAMuB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBJ,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMK,QAAQ,GAAG;QAAEtB,YAAY;QAAEF,KAAK;QAAEI,QAAQ;QAAEE;MAAS,CAAC;MAC5D,MAAMmB,OAAO,GAAG,8BAA8B,CAAC,CAAE;;MAEjD;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;;MAEA;MACA;MACA;MACA;MACA;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGF,OAAO,WAAW,EAAE;QAClDG,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,QAAQ;MAC/B,CAAC,CAAC;MAGFG,KAAK,CAAC,uCAAuC,CAAC,CAC7CM,IAAI,CAACP,QAAQ,IAAIA,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAAC,CACjCD,IAAI,CAACE,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CAC/BG,KAAK,CAAC5B,KAAK,IAAI0B,OAAO,CAAC1B,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;MAE9D,MAAMyB,IAAI,GAAG,MAAMT,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCrB,UAAU,CAACsB,IAAI,CAACI,OAAO,IAAI,0BAA0B,CAAC;MACtDtB,eAAe,CAAC,IAAI,CAAC;MACrBpB,QAAQ,CAAC,cAAc,CAAC;IAC1B,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdS,UAAU,CAAC,KAAK,CAAC;MACjBR,QAAQ,CAAC,wCAAwC,CAAC;IACpD;EACF,CAAC;EAED,oBACEjB,OAAA;IAAK8C,SAAS,EAAC,kBAAkB;IAAAC,QAAA,GAC9B,CAAC3B,SAAS,gBACTpB,OAAA;MAAA+C,QAAA,eACE/C,OAAA,CAACJ,KAAK;QACJoD,OAAO,EAAE,CAAC,oBAAoB,EAAE,2BAA2B,CAAE;QAC7DC,SAAS,EAAE,EAAG;QACdC,SAAS,EAAE,EAAG;QACdC,IAAI,EAAE,KAAM;QACZC,UAAU,EAAEA,CAAA,KAAM/B,YAAY,CAAC,IAAI;MAAE;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELxD,OAAA;MAAK8C,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EACnCzB,YAAY,gBACXtB,OAAA,CAACF,qBAAqB;QAAAuD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAEzBxD,OAAA;QAAM8C,SAAS,EAAC,aAAa;QAACW,QAAQ,EAAE9B,YAAa;QAAAoB,QAAA,gBAEnD/C,OAAA;UAAK8C,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzB/C,OAAA;YAAO0D,OAAO,EAAC,OAAO;YAAAX,QAAA,EAAC;UAAiB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAChDxD,OAAA;YAAK8C,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1B/C,OAAA;cACE2D,EAAE,EAAC,OAAO;cACVC,IAAI,EAAC,OAAO;cACZC,KAAK,EAAEvD,KAAM;cACbwD,QAAQ,EAAGlC,CAAC,IAAKrB,QAAQ,CAACqB,CAAC,CAACmC,MAAM,CAACF,KAAK,CAAE;cAC1CG,QAAQ;cACRC,QAAQ,EAAE7D,IAAI,GAAG,CAAC,IAAIoB;YAAQ;cAAA6B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/B,CAAC,EACDpD,IAAI,KAAK,CAAC,iBACTJ,OAAA;cAAQ4D,IAAI,EAAC,QAAQ;cAACd,SAAS,EAAC,iBAAiB;cAACoB,OAAO,EAAExC,cAAe;cAACuC,QAAQ,EAAEzC,OAAQ;cAAAuB,QAAA,EAAC;YAE9F;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CACT;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EAGLpD,IAAI,IAAI,CAAC,iBACRJ,OAAA;UAAK8C,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzB/C,OAAA;YAAO0D,OAAO,EAAC,cAAc;YAAAX,QAAA,EAAC;UAAyB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC/DxD,OAAA;YAAK8C,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1B/C,OAAA;cACE2D,EAAE,EAAC,cAAc;cACjBC,IAAI,EAAC,KAAK;cACVC,KAAK,EAAErD,YAAa;cACpBsD,QAAQ,EAAGlC,CAAC,IAAKnB,eAAe,CAACmB,CAAC,CAACmC,MAAM,CAACF,KAAK,CAAE;cACjDG,QAAQ;cACRC,QAAQ,EAAE7D,IAAI,GAAG,CAAC,IAAIoB;YAAQ;cAAA6B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/B,CAAC,EACDpD,IAAI,KAAK,CAAC,iBACTJ,OAAA;cAAQ4D,IAAI,EAAC,QAAQ;cAACd,SAAS,EAAC,iBAAiB;cAACoB,OAAO,EAAExC,cAAe;cAACuC,QAAQ,EAAEzC,OAAQ;cAAAuB,QAAA,EAAC;YAE9F;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CACT;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,EAGApD,IAAI,IAAI,CAAC,iBACRJ,OAAA;UAAK8C,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzB/C,OAAA;YAAO0D,OAAO,EAAC,UAAU;YAAAX,QAAA,EAAC;UAAkB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpDxD,OAAA;YAAK8C,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1B/C,OAAA;cACE2D,EAAE,EAAC,UAAU;cACbC,IAAI,EAAC,MAAM;cACXC,KAAK,EAAEnD,QAAS;cAChBoD,QAAQ,EAAGlC,CAAC,IAAKjB,WAAW,CAACiB,CAAC,CAACmC,MAAM,CAACF,KAAK,CAAE;cAC7CG,QAAQ;cACRC,QAAQ,EAAE7D,IAAI,GAAG,CAAC,IAAIoB;YAAQ;cAAA6B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/B,CAAC,EACDpD,IAAI,KAAK,CAAC,iBACTJ,OAAA;cAAQ4D,IAAI,EAAC,QAAQ;cAACd,SAAS,EAAC,iBAAiB;cAACoB,OAAO,EAAExC,cAAe;cAACuC,QAAQ,EAAEzC,OAAQ;cAAAuB,QAAA,EAAC;YAE9F;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CACT;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,EAGApD,IAAI,IAAI,CAAC,iBACRJ,OAAA;UAAK8C,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzB/C,OAAA;YAAO0D,OAAO,EAAC,UAAU;YAAAX,QAAA,EAAC;UAAkB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpDxD,OAAA;YAAK8C,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1B/C,OAAA;cACE2D,EAAE,EAAC,UAAU;cACbC,IAAI,EAAC,UAAU;cACfC,KAAK,EAAEjD,QAAS;cAChBkD,QAAQ,EAAGlC,CAAC,IAAKf,WAAW,CAACe,CAAC,CAACmC,MAAM,CAACF,KAAK,CAAE;cAC7CG,QAAQ;cACRC,QAAQ,EAAEzC;YAAQ;cAAA6B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnB,CAAC,EACDpD,IAAI,KAAK,CAAC,iBACTJ,OAAA;cAAQ4D,IAAI,EAAC,QAAQ;cAACd,SAAS,EAAC,iBAAiB;cAACoB,OAAO,EAAExC,cAAe;cAACuC,QAAQ,EAAEzC,OAAQ;cAAAuB,QAAA,EAAC;YAE9F;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CACT;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,EAGApD,IAAI,IAAI,CAAC,iBACRJ,OAAA;UAAK8C,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzB/C,OAAA;YAAO0D,OAAO,EAAC,iBAAiB;YAAAX,QAAA,EAAC;UAAiB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1DxD,OAAA;YAAK8C,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1B/C,OAAA;cACE2D,EAAE,EAAC,iBAAiB;cACpBC,IAAI,EAAC,UAAU;cACfC,KAAK,EAAE/C,eAAgB;cACvBgD,QAAQ,EAAGlC,CAAC,IAAKb,kBAAkB,CAACa,CAAC,CAACmC,MAAM,CAACF,KAAK,CAAE;cACpDG,QAAQ;cACRC,QAAQ,EAAEzC;YAAQ;cAAA6B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnB,CAAC,eACFxD,OAAA;cAAQ4D,IAAI,EAAC,QAAQ;cAACd,SAAS,EAAC,iBAAiB;cAACmB,QAAQ,EAAEzC,OAAQ;cAAAuB,QAAA,EAAC;YAErE;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,EAGAxC,KAAK,iBAAIhB,OAAA;UAAG8C,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAE/B;QAAK;UAAAqC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACjDtC,OAAO,iBAAIlB,OAAA;UAAG8C,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAE7B;QAAO;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD;IACP;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN,EAEApD,IAAI,IAAI,CAAC,iBACRJ,OAAA;MAAK8C,SAAS,EAAC,6BAA6B;MAAAC,QAAA,eAC1C/C,OAAA,CAACN,mBAAmB;QAACkB,QAAQ,EAAEA;MAAS;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACtD,EAAA,CAlNQD,MAAM;EAAA,QACIJ,WAAW;AAAA;AAAAsE,EAAA,GADrBlE,MAAM;AAoNf,eAAeA,MAAM;;AAErkE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}