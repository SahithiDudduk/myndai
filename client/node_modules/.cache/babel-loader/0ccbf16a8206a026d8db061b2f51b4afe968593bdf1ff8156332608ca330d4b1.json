{"ast":null,"code":"var _jsxFileName = \"/home/sahithi/Documents/myndai/client/src/pages/SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactTyped from 'react-typed';\nimport './SignUp.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SignUp() {\n  _s();\n  const [currentStep, setCurrentStep] = useState(0); // Keeps track of which step you're on\n  const [showInput, setShowInput] = useState(false); // Shows input after the intro typing\n  const [email, setEmail] = useState(''); // Stores email\n  const [password, setPassword] = useState(''); // Stores password\n  const [error, setError] = useState(''); // For error messages\n\n  const steps = [{\n    label: 'Enter your email*',\n    input: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 42\n    }, this)\n  }, {\n    label: 'Create a password*',\n    input: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 43\n    }, this)\n  }\n  // Add more steps as needed, such as \"Confirm Password,\" \"Full Name,\" etc.\n  ];\n  const handleNext = () => {\n    // Validate the current step\n    if (currentStep === 0 && !email) {\n      setError('Email is required.');\n      return;\n    }\n    if (currentStep === 1 && !password) {\n      setError('Password is required.');\n      return;\n    }\n\n    // Move to the next step\n    setError('');\n    if (currentStep < steps.length - 1) {\n      setCurrentStep(prevStep => prevStep + 1);\n    } else {\n      // Submit or move to next page if it's the last step\n      handleSubmit();\n    }\n  };\n  const handleSubmit = () => {\n    // Handle form submission (e.g., send data to server)\n    alert(`Email: ${email}, Password: ${password}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: !showInput ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(ReactTyped, {\n        strings: [\"Welcome to GitHub!\", \"Let’s begin the adventure\"],\n        typeSpeed: 50,\n        backSpeed: 30,\n        loop: false,\n        onComplete: () => setShowInput(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: steps[currentStep].label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"signup-form\",\n        onSubmit: e => e.preventDefault(),\n        children: [steps[currentStep].input, error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"signup-button\",\n          onClick: handleNext,\n          children: currentStep === steps.length - 1 ? 'Submit' : 'Continue'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(SignUp, \"NrDCe8hFjbe9FU3nda+Rd9cvkOI=\");\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","ReactTyped","jsxDEV","_jsxDEV","Fragment","_Fragment","SignUp","_s","currentStep","setCurrentStep","showInput","setShowInput","email","setEmail","password","setPassword","error","setError","steps","label","input","type","value","onChange","e","target","required","fileName","_jsxFileName","lineNumber","columnNumber","handleNext","length","prevStep","handleSubmit","alert","className","children","strings","typeSpeed","backSpeed","loop","onComplete","onSubmit","preventDefault","onClick","_c","$RefreshReg$"],"sources":["/home/sahithi/Documents/myndai/client/src/pages/SignUp.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactTyped from 'react-typed';\nimport './SignUp.css';\n\nfunction SignUp() {\n  const [currentStep, setCurrentStep] = useState(0);  // Keeps track of which step you're on\n  const [showInput, setShowInput] = useState(false);  // Shows input after the intro typing\n  const [email, setEmail] = useState('');             // Stores email\n  const [password, setPassword] = useState('');       // Stores password\n  const [error, setError] = useState('');             // For error messages\n\n  const steps = [\n    { label: 'Enter your email*', input: <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required /> },\n    { label: 'Create a password*', input: <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required /> }\n    // Add more steps as needed, such as \"Confirm Password,\" \"Full Name,\" etc.\n  ];\n\n  const handleNext = () => {\n    // Validate the current step\n    if (currentStep === 0 && !email) {\n      setError('Email is required.');\n      return;\n    }\n    if (currentStep === 1 && !password) {\n      setError('Password is required.');\n      return;\n    }\n\n    // Move to the next step\n    setError('');\n    if (currentStep < steps.length - 1) {\n      setCurrentStep((prevStep) => prevStep + 1);\n    } else {\n      // Submit or move to next page if it's the last step\n      handleSubmit();\n    }\n  };\n\n  const handleSubmit = () => {\n    // Handle form submission (e.g., send data to server)\n    alert(`Email: ${email}, Password: ${password}`);\n  };\n\n  return (\n    <div className=\"signup-container\">\n      {!showInput ? (\n        <h1>\n          <ReactTyped\n            strings={[\"Welcome to GitHub!\", \"Let’s begin the adventure\"]}\n            typeSpeed={50}\n            backSpeed={30}\n            loop={false}\n            onComplete={() => setShowInput(true)}\n          />\n        </h1>\n      ) : (\n        <>\n          <h1>{steps[currentStep].label}</h1>\n          <form className=\"signup-form\" onSubmit={(e) => e.preventDefault()}>\n            {steps[currentStep].input}\n            {error && <p className=\"error-message\">{error}</p>}\n            <button type=\"button\" className=\"signup-button\" onClick={handleNext}>\n              {currentStep === steps.length - 1 ? 'Submit' : 'Continue'}\n            </button>\n          </form>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default SignUp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}