{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/myndai/client/src/pages/GoalSetting.js\";\n/*import React, { useState } from 'react';\n\n// Styles object for the container and buttons\nconst styles = {\n  container: {\n    textAlign: 'center',\n    margin: '20px',\n  },\n  title: {\n    fontSize: '24px',\n    fontWeight: 'bold',\n  },\n  button: {\n    display: 'block',\n    margin: '10px auto',\n    padding: '10px 20px',\n    fontSize: '18px',\n    cursor: 'pointer',\n  },\n  result: {\n    marginTop: '20px',\n    padding: '10px',\n    border: '1px solid #ccc',\n    borderRadius: '5px',\n    display: 'inline-block',\n    textAlign: 'left',\n  },\n};\n\n// Function to fetch nutrition data from the EC2 API\nconst fetchNutritionData = async (goal) => {\n  const age = 26;\n  const gender = 'Male';\n  const ec2PublicIP = 'http://3.111.58.101:5000'; // Replace <EC2-PUBLIC-IP> with your EC2 instance's public IP\n\n  try {\n    const response = await fetch(`${ec2PublicIP}/api/nutrition?age=${age}&gender=${gender}&goal=${goal}`);\n\n    if (!response.ok) {\n      throw new Error(`Error: ${response.statusText}`);\n    }\n\n    const data = await response.json();\n    return data; // return the nutrition data\n  } catch (error) {\n    console.error('Error fetching nutrition data:', error.message);\n    return null;\n  }\n};\n\nconst GoalActivity = () => {\n  const [nutritionData, setNutritionData] = useState(null);\n\n  // Handle the button click event and trigger fetch\n  const handleGoalSelection = async (goal) => {\n    console.log(`Selected Goal: ${goal}`);\n    const data = await fetchNutritionData(goal); // Call API with the selected goal\n\n    if (data) {\n      setNutritionData(data); // Update the state with fetched data\n    }\n  };\n\n  return (\n    <div style={styles.container}>\n      <h1 style={styles.title}>What brings you to MyndAI?</h1>\n\n      <button style={styles.button} onClick={() => handleGoalSelection('Weight Loss')}>Weight Loss</button>\n      <button style={styles.button} onClick={() => handleGoalSelection('Gain Strength')}>Gain Strength</button>\n      <button style={styles.button} onClick={() => handleGoalSelection('Get Flexible')}>Get Flexible</button>\n      <button style={styles.button} onClick={() => handleGoalSelection('Meditation')}>Meditation</button>\n      <button style={styles.button} onClick={() => handleGoalSelection('Sleep Well')}>Sleep Well</button>\n      <button style={styles.button} onClick={() => handleGoalSelection('Gain Weight')}>Gain Weight</button>\n\n      {nutritionData && (\n        <div style={styles.result}>\n          <h3>Nutrition Information</h3>\n          <p><strong>Daily Calorie Target:</strong> {nutritionData.Daily_Calorie_Target}</p>\n          <p><strong>Protein:</strong> {nutritionData.Protein}g</p>\n          <p><strong>Carbohydrates:</strong> {nutritionData.Carbohydrates}g</p>\n          <p><strong>Fat:</strong> {nutritionData.Fat}g</p>\n          <p><strong>Breakfast Suggestion:</strong> {nutritionData.Breakfast_Suggestion}</p>\n          <p><strong>Lunch Suggestion:</strong> {nutritionData.Lunch_Suggestion}</p>\n          <p><strong>Dinner Suggestion:</strong> {nutritionData.Dinner_Suggestion}</p>\n          <p><strong>Snack Suggestion:</strong> {nutritionData.Snack_Suggestion}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GoalActivity;*/\n\nimport React from 'react';\n\n// Styles object for the container and buttons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  container: {\n    textAlign: 'center',\n    margin: '20px'\n  },\n  title: {\n    fontSize: '24px',\n    fontWeight: 'bold'\n  },\n  button: {\n    display: 'block',\n    margin: '10px auto',\n    padding: '10px 20px',\n    fontSize: '18px',\n    cursor: 'pointer'\n  }\n};\n\n// Function to fetch nutrition data from API\nconst fetchNutritionData = async goal => {\n  try {\n    const age = 26;\n    const gender = 'Male';\n    const response = await fetch(`/api/nutrition?age=${age}&gender=${gender}&goal=${goal}`);\n\n    // Check if response is HTML (error page) instead of JSON\n    const textResponse = await response.text();\n    console.log('Raw response:', textResponse);\n\n    // Convert to JSON if it's valid JSON\n    const data = JSON.parse(textResponse);\n    console.log('Fetched data:', data);\n  } catch (error) {\n    console.error('Error fetching nutrition data:', error);\n  }\n};\nconst GoalActivity = () => {\n  // Handle the button click event and trigger fetch\n  const handleGoalSelection = goal => {\n    console.log(`Selected Goal: ${goal}`);\n    fetchNutritionData(goal); // Call API with the selected goal\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: styles.title,\n      children: \"What brings you to MyndAI?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles.button,\n      onClick: () => handleGoalSelection('Loose Weight'),\n      children: \"Loose Weight\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles.button,\n      onClick: () => handleGoalSelection('Gain Strength'),\n      children: \"Gain Strength\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles.button,\n      onClick: () => handleGoalSelection('Get Flexible'),\n      children: \"Get Flexible\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles.button,\n      onClick: () => handleGoalSelection('Meditation'),\n      children: \"Meditation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles.button,\n      onClick: () => handleGoalSelection('Sleep Well'),\n      children: \"Sleep Well\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles.button,\n      onClick: () => handleGoalSelection('Gain Weight'),\n      children: \"Gain Weight\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_c = GoalActivity;\nexport default GoalActivity;\nvar _c;\n$RefreshReg$(_c, \"GoalActivity\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","styles","container","textAlign","margin","title","fontSize","fontWeight","button","display","padding","cursor","fetchNutritionData","goal","age","gender","response","fetch","textResponse","text","console","log","data","JSON","parse","error","GoalActivity","handleGoalSelection","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/ec2-user/myndai/client/src/pages/GoalSetting.js"],"sourcesContent":["/*import React, { useState } from 'react';\n\n// Styles object for the container and buttons\nconst styles = {\n  container: {\n    textAlign: 'center',\n    margin: '20px',\n  },\n  title: {\n    fontSize: '24px',\n    fontWeight: 'bold',\n  },\n  button: {\n    display: 'block',\n    margin: '10px auto',\n    padding: '10px 20px',\n    fontSize: '18px',\n    cursor: 'pointer',\n  },\n  result: {\n    marginTop: '20px',\n    padding: '10px',\n    border: '1px solid #ccc',\n    borderRadius: '5px',\n    display: 'inline-block',\n    textAlign: 'left',\n  },\n};\n\n// Function to fetch nutrition data from the EC2 API\nconst fetchNutritionData = async (goal) => {\n  const age = 26;\n  const gender = 'Male';\n  const ec2PublicIP = 'http://3.111.58.101:5000'; // Replace <EC2-PUBLIC-IP> with your EC2 instance's public IP\n\n  try {\n    const response = await fetch(`${ec2PublicIP}/api/nutrition?age=${age}&gender=${gender}&goal=${goal}`);\n\n    if (!response.ok) {\n      throw new Error(`Error: ${response.statusText}`);\n    }\n\n    const data = await response.json();\n    return data; // return the nutrition data\n  } catch (error) {\n    console.error('Error fetching nutrition data:', error.message);\n    return null;\n  }\n};\n\nconst GoalActivity = () => {\n  const [nutritionData, setNutritionData] = useState(null);\n\n  // Handle the button click event and trigger fetch\n  const handleGoalSelection = async (goal) => {\n    console.log(`Selected Goal: ${goal}`);\n    const data = await fetchNutritionData(goal); // Call API with the selected goal\n\n    if (data) {\n      setNutritionData(data); // Update the state with fetched data\n    }\n  };\n\n  return (\n    <div style={styles.container}>\n      <h1 style={styles.title}>What brings you to MyndAI?</h1>\n\n      <button style={styles.button} onClick={() => handleGoalSelection('Weight Loss')}>Weight Loss</button>\n      <button style={styles.button} onClick={() => handleGoalSelection('Gain Strength')}>Gain Strength</button>\n      <button style={styles.button} onClick={() => handleGoalSelection('Get Flexible')}>Get Flexible</button>\n      <button style={styles.button} onClick={() => handleGoalSelection('Meditation')}>Meditation</button>\n      <button style={styles.button} onClick={() => handleGoalSelection('Sleep Well')}>Sleep Well</button>\n      <button style={styles.button} onClick={() => handleGoalSelection('Gain Weight')}>Gain Weight</button>\n\n      {nutritionData && (\n        <div style={styles.result}>\n          <h3>Nutrition Information</h3>\n          <p><strong>Daily Calorie Target:</strong> {nutritionData.Daily_Calorie_Target}</p>\n          <p><strong>Protein:</strong> {nutritionData.Protein}g</p>\n          <p><strong>Carbohydrates:</strong> {nutritionData.Carbohydrates}g</p>\n          <p><strong>Fat:</strong> {nutritionData.Fat}g</p>\n          <p><strong>Breakfast Suggestion:</strong> {nutritionData.Breakfast_Suggestion}</p>\n          <p><strong>Lunch Suggestion:</strong> {nutritionData.Lunch_Suggestion}</p>\n          <p><strong>Dinner Suggestion:</strong> {nutritionData.Dinner_Suggestion}</p>\n          <p><strong>Snack Suggestion:</strong> {nutritionData.Snack_Suggestion}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GoalActivity;*/\n\nimport React from 'react';\n\n// Styles object for the container and buttons\nconst styles = {\n  container: {\n    textAlign: 'center',\n    margin: '20px',\n  },\n  title: {\n    fontSize: '24px',\n    fontWeight: 'bold',\n  },\n  button: {\n    display: 'block',\n    margin: '10px auto',\n    padding: '10px 20px',\n    fontSize: '18px',\n    cursor: 'pointer',\n  }\n};\n\n// Function to fetch nutrition data from API\nconst fetchNutritionData = async (goal) => {\n  try {\n    const age = 26;\n    const gender = 'Male';\n    const response = await fetch(`/api/nutrition?age=${age}&gender=${gender}&goal=${goal}`);\n\n    // Check if response is HTML (error page) instead of JSON\n    const textResponse = await response.text();\n    console.log('Raw response:', textResponse);\n\n    // Convert to JSON if it's valid JSON\n    const data = JSON.parse(textResponse);\n    console.log('Fetched data:', data);\n  } catch (error) {\n    console.error('Error fetching nutrition data:', error);\n  }\n};\n\n\nconst GoalActivity = () => {\n  // Handle the button click event and trigger fetch\n  const handleGoalSelection = (goal) => {\n    console.log(`Selected Goal: ${goal}`);\n    fetchNutritionData(goal); // Call API with the selected goal\n  };\n\n  return (\n    <div style={styles.container}>\n      <h1 style={styles.title}>What brings you to MyndAI?</h1>\n\n      <button style={styles.button} onClick={() => handleGoalSelection('Loose Weight')}>Loose Weight</button>\n      <button style={styles.button} onClick={() => handleGoalSelection('Gain Strength')}>Gain Strength</button>\n      <button style={styles.button} onClick={() => handleGoalSelection('Get Flexible')}>Get Flexible</button>\n      <button style={styles.button} onClick={() => handleGoalSelection('Meditation')}>Meditation</button>\n      <button style={styles.button} onClick={() => handleGoalSelection('Sleep Well')}>Sleep Well</button>\n      <button style={styles.button} onClick={() => handleGoalSelection('Gain Weight')}>Gain Weight</button>\n    </div>\n  );\n};\n\nexport default GoalActivity;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAG;EACbC,SAAS,EAAE;IACTC,SAAS,EAAE,QAAQ;IACnBC,MAAM,EAAE;EACV,CAAC;EACDC,KAAK,EAAE;IACLC,QAAQ,EAAE,MAAM;IAChBC,UAAU,EAAE;EACd,CAAC;EACDC,MAAM,EAAE;IACNC,OAAO,EAAE,OAAO;IAChBL,MAAM,EAAE,WAAW;IACnBM,OAAO,EAAE,WAAW;IACpBJ,QAAQ,EAAE,MAAM;IAChBK,MAAM,EAAE;EACV;AACF,CAAC;;AAED;AACA,MAAMC,kBAAkB,GAAG,MAAOC,IAAI,IAAK;EACzC,IAAI;IACF,MAAMC,GAAG,GAAG,EAAE;IACd,MAAMC,MAAM,GAAG,MAAM;IACrB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sBAAsBH,GAAG,WAAWC,MAAM,SAASF,IAAI,EAAE,CAAC;;IAEvF;IACA,MAAMK,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1CC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,YAAY,CAAC;;IAE1C;IACA,MAAMI,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACN,YAAY,CAAC;IACrCE,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,IAAI,CAAC;EACpC,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;EACxD;AACF,CAAC;AAGD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB;EACA,MAAMC,mBAAmB,GAAId,IAAI,IAAK;IACpCO,OAAO,CAACC,GAAG,CAAC,kBAAkBR,IAAI,EAAE,CAAC;IACrCD,kBAAkB,CAACC,IAAI,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,oBACEb,OAAA;IAAK4B,KAAK,EAAE3B,MAAM,CAACC,SAAU;IAAA2B,QAAA,gBAC3B7B,OAAA;MAAI4B,KAAK,EAAE3B,MAAM,CAACI,KAAM;MAAAwB,QAAA,EAAC;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAExDjC,OAAA;MAAQ4B,KAAK,EAAE3B,MAAM,CAACO,MAAO;MAAC0B,OAAO,EAAEA,CAAA,KAAMP,mBAAmB,CAAC,cAAc,CAAE;MAAAE,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvGjC,OAAA;MAAQ4B,KAAK,EAAE3B,MAAM,CAACO,MAAO;MAAC0B,OAAO,EAAEA,CAAA,KAAMP,mBAAmB,CAAC,eAAe,CAAE;MAAAE,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzGjC,OAAA;MAAQ4B,KAAK,EAAE3B,MAAM,CAACO,MAAO;MAAC0B,OAAO,EAAEA,CAAA,KAAMP,mBAAmB,CAAC,cAAc,CAAE;MAAAE,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvGjC,OAAA;MAAQ4B,KAAK,EAAE3B,MAAM,CAACO,MAAO;MAAC0B,OAAO,EAAEA,CAAA,KAAMP,mBAAmB,CAAC,YAAY,CAAE;MAAAE,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnGjC,OAAA;MAAQ4B,KAAK,EAAE3B,MAAM,CAACO,MAAO;MAAC0B,OAAO,EAAEA,CAAA,KAAMP,mBAAmB,CAAC,YAAY,CAAE;MAAAE,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnGjC,OAAA;MAAQ4B,KAAK,EAAE3B,MAAM,CAACO,MAAO;MAAC0B,OAAO,EAAEA,CAAA,KAAMP,mBAAmB,CAAC,aAAa,CAAE;MAAAE,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClG,CAAC;AAEV,CAAC;AAACE,EAAA,GAnBIT,YAAY;AAqBlB,eAAeA,YAAY;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}